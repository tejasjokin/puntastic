{"version":3,"sources":["Components/JokeType.js","Components/Joke.js","Components/Card.js","Components/Filters.js","Components/SearchBox.js","Components/Button.js","Components/Subscript.js","Container/App.js","serviceWorker.js","index.js"],"names":["JokeType","type","state","className","Joke","joke","obj","key","hasOwnProperty","isEmpty","href","Card","Filters","checkBoxHandler","id","value","onClick","htmlFor","Searchbox","onSearchChange","placeholder","onChange","Button","name","onSearchHandler","Subscript","text","particleParams","particles","number","density","enable","value_area","color","line_linked","opacity","move","speed","string","filters","App","event","checkboxes","forEach","item","target","isChecked","checked","push","filter","setState","queryString","join","searchField","fetch","then","response","json","resp","error","flags","Object","entries","upper","toUpperCase","setup","message","params","this","SearchBox","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.55990b20.chunk.js","sourcesContent":["import React from 'react';\r\nimport './JokeType.css'\r\n\r\nconst JokeType = ({ state }) =>\r\n{\r\n\tconst { type } = state\r\n\treturn(\r\n\t\t<div className = \"bb b--black-60 ma1 tl Type\">\r\n\t\t\t<p>{type}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default JokeType;","import React from 'react';\r\n\r\nconst isEmpty = (obj) => {\r\n\tfor(var key in obj){\r\n\t\tif(obj.hasOwnProperty(key))\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nconst Joke = ({ state }) => {\r\n\tconst { joke } = state;\r\n\tif(!isEmpty(joke))\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className = \"jokeContainer pa2 ma2\">\r\n\t\t\t\t<div className = \"setup\">\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t{joke[\"setup\"]}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"delivery\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{joke[\"delivery\"]}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className = \"jokeContainer pa2 ma2\">\r\n\t\t\t\t<div className = \"setup\">\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tDisclaimer: The developer of this site does not support discrimination based on gender,race and age of any manner.<br />\r\n\t\t\t\t\t\tThe jokes on this site are courtesy of <a href = \"https://sv443.net/jokeapi/v2/\">https://sv443.net/jokeapi/v2/</a><br />\r\n\t\t\t\t\t\tand the developer does not claim any rights.\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className = \"delivery\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tClick on Search to get your Joke.\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Joke;","import React from 'react';\r\nimport JokeType from './JokeType.js';\r\nimport Joke from './Joke.js';\r\n\r\nconst Card = ({state}) =>\r\n{\r\n\treturn(\r\n\t\t<div className = \"cardContainer bg-light-blue shadow-3 br3 ba b--black-60 tc dib ma2 grow\">\r\n\t\t\t<div className = \"cardContent\">\r\n\t\t\t\t<JokeType state = { state }/>\r\n\t\t\t\t<Joke state = {state}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Filters.css'\r\n\r\nconst Filters = ({ checkBoxHandler }) =>\r\n{\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className = \"filters \">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<input className=\"tgl tgl-light\" id=\"cb1\" value = \"Programming\" type=\"checkbox\" onClick = { checkBoxHandler }/>\r\n\t\t\t\t\t\t\t<label className=\"tgl-btn\" htmlFor=\"cb1\">\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t&nbsp;Programming\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<input className=\"tgl tgl-light\" id=\"cb2\" value = \"Miscellaneous\" type=\"checkbox\" onClick = { checkBoxHandler }/>\r\n\t\t\t\t\t\t\t<label className=\"tgl-btn\" htmlFor=\"cb2\">\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t&nbsp;Miscellaneous\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<input className=\"tgl tgl-light\" id=\"cb3\" value = \"Dark\" type=\"checkbox\" onClick = { checkBoxHandler }/>\r\n\t\t\t\t\t\t<label className=\"tgl-btn\" htmlFor=\"cb3\">\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t&nbsp;Dark\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\n\r\nconst Searchbox = ({ onSearchChange }) =>{\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t<input \r\n\t\tclassName = \"tc b br3 pa3 ba b--green bg-washed-red\" \r\n\t\ttype=\"search\" \r\n\t\tplaceholder=\"Enter keyword(optional)\"\r\n\t\tonChange = { onSearchChange } \r\n\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\nimport './Button.css';\r\nconst Button = ({ name, onSearchHandler }) =>\r\n{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<button type=\"button\" className = \"grow\" onClick = {onSearchHandler}>{name}</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Subscript.css';\r\n\r\nconst Subscript = ({ text }) => {\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<p className = \"sub\">\r\n\t\t\t\t{text}\r\n\t\t\t</p>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Subscript;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Card from '../Components/Card.js';\r\nimport Filters from '../Components/Filters.js';\r\nimport SearchBox from '../Components/SearchBox.js';\r\nimport Button from '../Components/Button.js';\r\nimport Particles from 'react-particles-js';\r\nimport Subscript from '../Components/Subscript.js';\r\n\r\n  const particleParams =  {\r\n  particles: {\r\n    number: {\r\n      value: 70,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n    },\r\n    color: '#ffffff',\r\n    line_linked:\r\n    {\r\n      enable: true,\r\n      color: '#ffffff',\r\n      opacity: 0.4\r\n    },\r\n    move: {\r\n      speed: 5,\r\n    }\r\n  }\r\n}\r\n\r\nvar string = '';\r\nvar filters = [];\r\n\r\nclass App extends Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state =   {\r\n      joke:{},\r\n      type: '',\r\n      filters: [],\r\n      checkboxes: [\r\n        {id: 1, value:\"Programming\", isChecked: false},\r\n        {id: 2, value:\"Miscellaneous\", isChecked: false},\r\n        {id: 3, value:\"Dark\", isChecked: false},\r\n      ],\r\n      searchField: '',\r\n  }\r\n  }\r\n\r\n  checkBoxHandler = (event) => {\r\n    const checkboxes = this.state.checkboxes;\r\n    filters = this.state.filters;\r\n    checkboxes.forEach(item => {\r\n      if(item.value===event.target.value)\r\n      {\r\n        item.isChecked = event.target.checked;\r\n        if(item.isChecked===true){\r\n          filters.push(item.value);\r\n        }\r\n        else\r\n        {\r\n          filters = filters.filter(obj => {return obj!==item.value;});\r\n        }\r\n      }\r\n    });\r\n    this.setState({checkboxes: checkboxes});\r\n    this.state.filters = filters;\r\n  }\r\n\r\n  onSearchHandler = (event) => {\r\n    var queryString = this.state.filters.join(',');\r\n    var searchField = this.state.searchField;\r\n    if(searchField!=='')\r\n    {\r\n      searchField  = '&contains='+searchField;\r\n    }\r\n    if(queryString==='')\r\n    {\r\n      queryString = 'Any';\r\n    }\r\n  fetch(`https://sv443.net/jokeapi/v2/joke/${queryString}?type=twopart${searchField}`)\r\n    .then((response) => response.json())\r\n    .then((resp) => this.setState({joke: resp}))\r\n    .then(() => {\r\n    string = '';\r\n    const { error } = this.state.joke;\r\n    if(error===false)\r\n    {\r\n      const { flags } = this.state.joke;\r\n      const flag = Object.entries(flags).filter(item => { if(item[1]===true){ return item;}});\r\n      flag.forEach((item) => { string = string + \" \" + item[0]});\r\n      const upper= string.toUpperCase();\r\n      if(upper!=='')\r\n      {\r\n        this.setState({type: upper});\r\n      }\r\n      else\r\n      {\r\n        this.setState({type: 'General'})\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const joke = {\r\n        \"setup\": '',\r\n        \"delivery\": '',\r\n      }\r\n      joke.setup = this.state.joke.message;\r\n      this.setState({joke: joke});\r\n      this.setState({type: ''});\r\n    }\r\n})\r\n}\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchField: event.target.value});\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div className = \"appContainer\">\r\n        <Particles \r\n        className = \"particles\"\r\n        params={particleParams} \r\n        />\r\n        <p className = \"header tc\">PUNTASTIC GUIDE</p>\r\n        <nav className = \"navigation tc bb bt b--black-60 mb3\">\r\n          <p className = \"filter_header\">CATEGORIES</p>\r\n          <Subscript text = { 'Optional' } />\r\n          <Filters checkBoxHandler = {this.checkBoxHandler}/>\r\n          <div className = \"searchContainer\">\r\n            <SearchBox onSearchChange = {this.onSearchChange}/>\r\n            <Button name = { 'Search' } onSearchHandler = {this.onSearchHandler}/>\r\n          </div>\r\n        </nav>\r\n        <div className = \"Body tc\">\r\n          <Card state = {this.state}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport tachyons from 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}